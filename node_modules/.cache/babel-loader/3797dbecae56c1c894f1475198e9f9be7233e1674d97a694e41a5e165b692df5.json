{"ast":null,"code":"var _jsxFileName = \"/home/scaletech/Documents/Work-space/base-frontend-x-master/src/shared/components/notification/notification.tsx\";\nimport React from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = () => {\n  return /*#__PURE__*/_jsxDEV(ToastContainer, {\n    position: \"bottom-right\",\n    autoClose: 4000,\n    hideProgressBar: true,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    draggable: true,\n    pauseOnHover: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = Notification;\nexport const notify = function (message, type) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const msg = `${message[0].toUpperCase()}${message.substr(1)}`;\n  options = {\n    icon: false,\n    style: {\n      background: '#dc3545',\n      color: '#FFFFFF'\n    },\n    ...options\n  };\n  if (type === 'success') {\n    toast.success(msg, {\n      ...options,\n      style: {\n        ...options.style,\n        background: '#1ca051'\n      }\n    });\n  } else if (type === 'error') {\n    toast.error(msg, {\n      ...options,\n      style: {\n        ...options.style,\n        background: '#e33737'\n      }\n    });\n  } else {\n    toast(message, options);\n  }\n};\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","toast","ToastContainer","Notification","notify","message","type","options","msg","toUpperCase","substr","icon","style","background","color","success","error"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/shared/components/notification/notification.tsx"],"sourcesContent":["import React from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Notification: React.FC = () => {\n\treturn (\n\t\t<ToastContainer\n\t\t\tposition='bottom-right'\n\t\t\tautoClose={4000}\n\t\t\thideProgressBar\n\t\t\tnewestOnTop={false}\n\t\t\tcloseOnClick\n\t\t\trtl={false}\n\t\t\tdraggable\n\t\t\tpauseOnHover\n\t\t/>\n\t);\n};\n\ntype NotificationType = 'success' | 'error';\nexport const notify = (message: string, type?: NotificationType, options: any = {}) => {\n\tconst msg = `${message[0].toUpperCase()}${message.substr(1)}`;\n\n\toptions = {\n\t\ticon: false,\n\t\tstyle: {\n\t\t\tbackground: '#dc3545',\n\t\t\tcolor: '#FFFFFF'\n\t\t},\n\t\t...options\n\t};\n\n\tif (type === 'success') {\n\t\ttoast.success(msg, { ...options, style: { ...options.style, background: '#1ca051' } });\n\t} else if (type === 'error') {\n\t\ttoast.error(msg, { ...options, style: { ...options.style, background: '#e33737' } });\n\t} else {\n\t\ttoast(message, options);\n\t}\n};\n\nexport default Notification;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AAEtD,OAAO,uCAAuC;AAAC;AAE/C,MAAMC,YAAsB,GAAG,MAAM;EACpC,oBACC,QAAC,cAAc;IACd,QAAQ,EAAC,cAAc;IACvB,SAAS,EAAE,IAAK;IAChB,eAAe;IACf,WAAW,EAAE,KAAM;IACnB,YAAY;IACZ,GAAG,EAAE,KAAM;IACX,SAAS;IACT,YAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEJ,CAAC;AAAC,KAbIA,YAAsB;AAgB5B,OAAO,MAAMC,MAAM,GAAG,UAACC,OAAe,EAAEC,IAAuB,EAAwB;EAAA,IAAtBC,OAAY,uEAAG,CAAC,CAAC;EACjF,MAAMC,GAAG,GAAI,GAAEH,OAAO,CAAC,CAAC,CAAC,CAACI,WAAW,EAAG,GAAEJ,OAAO,CAACK,MAAM,CAAC,CAAC,CAAE,EAAC;EAE7DH,OAAO,GAAG;IACTI,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE;MACNC,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE;IACR,CAAC;IACD,GAAGP;EACJ,CAAC;EAED,IAAID,IAAI,KAAK,SAAS,EAAE;IACvBL,KAAK,CAACc,OAAO,CAACP,GAAG,EAAE;MAAE,GAAGD,OAAO;MAAEK,KAAK,EAAE;QAAE,GAAGL,OAAO,CAACK,KAAK;QAAEC,UAAU,EAAE;MAAU;IAAE,CAAC,CAAC;EACvF,CAAC,MAAM,IAAIP,IAAI,KAAK,OAAO,EAAE;IAC5BL,KAAK,CAACe,KAAK,CAACR,GAAG,EAAE;MAAE,GAAGD,OAAO;MAAEK,KAAK,EAAE;QAAE,GAAGL,OAAO,CAACK,KAAK;QAAEC,UAAU,EAAE;MAAU;IAAE,CAAC,CAAC;EACrF,CAAC,MAAM;IACNZ,KAAK,CAACI,OAAO,EAAEE,OAAO,CAAC;EACxB;AACD,CAAC;AAED,eAAeJ,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}