{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/weather-app/src/features/weather/component/weather.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../style/weather.scss\";\nimport axios from \"axios\";\nimport { formattedTime, getDate, getDay, getTime } from \"shared/util/utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n  const [forecastWeatherData, setForecastWeatherData] = useState(null);\n  const [filteredForecasts, setFilteredForecasts] = useState();\n  const [location, setLocation] = useState(\"Ahmedabad\");\n  const [day, setDay] = useState(7);\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    // const location = \"Surat\"; // Example location\n\n    const fetchCurrentWeatherData = async () => {\n      try {\n        const response = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}`);\n        setCurrentWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n    fetchCurrentWeatherData();\n  }, []);\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    const fetchForecastWeatherData = async () => {\n      try {\n        const response = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=${day}`);\n        setForecastWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n    fetchForecastWeatherData();\n  }, []);\n  useEffect(() => {\n    // console.log(currentWeatherData?.location.localtime, \"currentWeatherData\");\n    // console.log(\n    //   currentWeatherData?.forecast.forecastday[0].hour,\n    //   \"currentWeatherData\"\n    // );\n    // const dayNames = currentWeatherData?.forecast.forecastday.map(\n    //   (day: any) => {\n    //     const date = new Date(day.date);\n    //     return date.toLocaleDateString(undefined, { weekday: \"long\" });\n    //   }\n    // );\n    // console.log(\"dayNames:\", dayNames);\n  }, [currentWeatherData]);\n  const time = getTime(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n  const date = getDate(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n  const days = getDay(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n  useEffect(() => {\n    const hourlyForecasts = currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.forecast.forecastday[0].hour;\n    if (hourlyForecasts) {\n      const filteredForecast = hourlyForecasts.filter((hour, index) => index % 4 === 0);\n      setFilteredForecasts(filteredForecast);\n    }\n  }, [currentWeatherData]);\n\n  // if (!currentWeatherData) {\n  //   return <div>Loading...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"in\"), console.log(\"filteredForecasts:\", filteredForecasts), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather width--full height--full-viewport\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today__weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex align-items--center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text--white\",\n                children: currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.current.condition.icon,\n                alt: \"weather-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text--white\",\n              children: [\"Currently in \", currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.name, \" \", date, \"- \", time, \",\", \" \", days]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text--white mt--8\",\n              children: [currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.current.temp_c, \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today-forecast__weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text--white\",\n              children: \"Today's Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-content--between\",\n              children: filteredForecasts === null || filteredForecasts === void 0 ? void 0 : filteredForecasts.map((data, index) => {\n                const {\n                  time,\n                  temp_c\n                } = data;\n                console.log(data, '\"\"\"\"\"\"');\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"today-forecast__weather-box flex flex--column  \",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: formattedTime(time)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: data.condition.icon,\n                    alt: \"weather-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: temp_c\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text--center\",\n            children: \"7-day Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Weather, \"cI2F50L5NFs6RCJ9Td9rIz1btAk=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","axios","formattedTime","getDate","getDay","getTime","Weather","currentWeatherData","setCurrentWeatherData","forecastWeatherData","setForecastWeatherData","filteredForecasts","setFilteredForecasts","location","setLocation","day","setDay","apiKey","fetchCurrentWeatherData","response","get","data","error","console","message","fetchForecastWeatherData","time","localtime","date","days","hourlyForecasts","forecast","forecastday","hour","filteredForecast","filter","index","log","name","current","condition","icon","temp_c","map"],"sources":["/home/khushbu/workspace/weather-app/src/features/weather/component/weather.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport \"../style/weather.scss\";\nimport axios from \"axios\";\nimport { log } from \"console\";\nimport { formattedTime, getDate, getDay, getTime } from \"shared/util/utility\";\n\nconst Weather: FC = () => {\n  const [currentWeatherData, setCurrentWeatherData] = useState<any>(null);\n  const [forecastWeatherData, setForecastWeatherData] = useState<any>(null);\n  const [filteredForecasts, setFilteredForecasts] = useState<any>();\n  const [location, setLocation] = useState<string>(\"Ahmedabad\");\n  const [day, setDay] = useState<number>(7);\n\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    // const location = \"Surat\"; // Example location\n\n    const fetchCurrentWeatherData = async () => {\n      try {\n        const response = await axios.get(\n          `http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}`\n        );\n        setCurrentWeatherData(response.data);\n      } catch (error: any) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n\n    fetchCurrentWeatherData();\n  }, []);\n\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n\n    const fetchForecastWeatherData = async () => {\n      try {\n        const response = await axios.get(\n          `http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=${day}`\n        );\n        setForecastWeatherData(response.data);\n      } catch (error: any) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n\n    fetchForecastWeatherData();\n  }, []);\n\n  useEffect(() => {\n    // console.log(currentWeatherData?.location.localtime, \"currentWeatherData\");\n    // console.log(\n    //   currentWeatherData?.forecast.forecastday[0].hour,\n    //   \"currentWeatherData\"\n    // );\n    // const dayNames = currentWeatherData?.forecast.forecastday.map(\n    //   (day: any) => {\n    //     const date = new Date(day.date);\n    //     return date.toLocaleDateString(undefined, { weekday: \"long\" });\n    //   }\n    // );\n    // console.log(\"dayNames:\", dayNames);\n  }, [currentWeatherData]);\n\n  const time = getTime(currentWeatherData?.location.localtime);\n  const date = getDate(currentWeatherData?.location.localtime);\n  const days = getDay(currentWeatherData?.location.localtime);\n\n  useEffect(() => {\n    const hourlyForecasts = currentWeatherData?.forecast.forecastday[0].hour;\n    if (hourlyForecasts) {\n      const filteredForecast = hourlyForecasts.filter(\n        (hour: any, index: any) => index % 4 === 0\n      );\n      setFilteredForecasts(filteredForecast);\n    }\n  }, [currentWeatherData]);\n\n  // if (!currentWeatherData) {\n  //   return <div>Loading...</div>;\n  // }\n  return (\n    <>\n      {console.log(\"in\")}\n      {console.log(\"filteredForecasts:\", filteredForecasts)}\n\n      <div className=\"weather width--full height--full-viewport\">\n        <div className=\"box flex\">\n          <div className=\"current\">\n            <div className=\"today__weather\">\n              <div className=\"flex align-items--center\">\n                <h3 className=\"text--white\">\n                  {currentWeatherData?.location.name}\n                </h3>\n                <img\n                  src={currentWeatherData?.current.condition.icon}\n                  alt=\"weather-img\"\n                />\n              </div>\n              <p className=\"text--white\">\n                Currently in {currentWeatherData?.location.name} {date}- {time},{\" \"}\n                {days}\n              </p>\n              <h1 className=\"text--white mt--8\">\n                {currentWeatherData?.current.temp_c}°c\n              </h1>\n            </div>\n            <div className=\"today-forecast__weather\">\n              <h5 className=\"text--white\">Today's Forecast</h5>\n              <div className=\"flex justify-content--between\">\n                {filteredForecasts?.map((data: any, index: number) => {\n                  const { time, temp_c } = data;\n                  console.log(data, '\"\"\"\"\"\"');\n                  return (\n                    <div\n                      className=\"today-forecast__weather-box flex flex--column  \"\n                      key={index}\n                    >\n                      <p>{formattedTime(time)}</p>\n                      <img src={data.condition.icon} alt=\"weather-img\" />\n                      <p>{temp_c}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"forecast\">\n            <h5 className=\"text--center\">7-day Forecast</h5>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}