{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/weather-app/src/features/weather/component/weather.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../style/weather.scss\";\nimport axios from \"axios\";\nimport { getDate, getDay, getTime } from \"shared/util/utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n  const [forecastWeatherData, setForecastWeatherData] = useState(null);\n  const [location, setLocation] = useState(\"Ahmedabad\");\n  const [day, setDay] = useState(7);\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    // const location = \"Surat\"; // Example location\n\n    const fetchCurrentWeatherData = async () => {\n      try {\n        const response = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}`);\n        setCurrentWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n    fetchCurrentWeatherData();\n  }, []);\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    const fetchForecastWeatherData = async () => {\n      try {\n        const response = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=${day}`);\n        setForecastWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n    fetchForecastWeatherData();\n  }, []);\n  useEffect(() => {\n    console.log(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime, \"currentWeatherData\");\n\n    // console.log(\n    //   currentWeatherData?.forecast.forecastday[0].hour,\n    //   \"currentWeatherData\"\n    // );\n    const dayNames = currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.forecast.forecastday.map(day => {\n      const date = new Date(day.date);\n      return date.toLocaleDateString(undefined, {\n        weekday: \"long\"\n      });\n    });\n    console.log(\"dayNames:\", dayNames);\n  }, [currentWeatherData]);\n  const time = getTime(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n  const date = getDate(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n  const days = getDay(currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.localtime);\n\n  // if (!currentWeatherData) {\n  //   return <div>Loading...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"in\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather width--full height--full-viewport\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today__weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex align-items--center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text--white\",\n                children: currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.current.condition.icon,\n                alt: \"weather-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text--white\",\n              children: [\"Currently in \", currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.location.name, \" \", date, \"- \", time, \",\", \" \", days]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text--white mt--8\",\n              children: [currentWeatherData === null || currentWeatherData === void 0 ? void 0 : currentWeatherData.current.temp_c, \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text--center\",\n            children: \"7-day Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Weather, \"z1P5NJjKmjNE0tsbIG6D52hxZBY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","axios","getDate","getDay","getTime","Weather","currentWeatherData","setCurrentWeatherData","forecastWeatherData","setForecastWeatherData","location","setLocation","day","setDay","apiKey","fetchCurrentWeatherData","response","get","data","error","console","message","fetchForecastWeatherData","log","localtime","dayNames","forecast","forecastday","map","date","Date","toLocaleDateString","undefined","weekday","time","days","name","current","condition","icon","temp_c"],"sources":["/home/khushbu/workspace/weather-app/src/features/weather/component/weather.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport \"../style/weather.scss\";\nimport axios from \"axios\";\nimport { log } from \"console\";\nimport { getDate, getDay, getTime } from \"shared/util/utility\";\n\nconst Weather: FC = () => {\n  const [currentWeatherData, setCurrentWeatherData] = useState<any>(null);\n  const [forecastWeatherData, setForecastWeatherData] = useState<any>(null);\n  const [location, setLocation] = useState<string>(\"Ahmedabad\");\n  const [day, setDay] = useState<number>(7);\n\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n    // const location = \"Surat\"; // Example location\n\n    const fetchCurrentWeatherData = async () => {\n      try {\n        const response = await axios.get(\n          `http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}`\n        );\n        setCurrentWeatherData(response.data);\n      } catch (error: any) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n\n    fetchCurrentWeatherData();\n  }, []);\n\n  useEffect(() => {\n    const apiKey = \"4aad69c6cb244e75ac944054230506\";\n\n    const fetchForecastWeatherData = async () => {\n      try {\n        const response = await axios.get(\n          `http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=${day}`\n        );\n        setForecastWeatherData(response.data);\n      } catch (error: any) {\n        console.error(\"Error:\", error.message);\n      }\n    };\n\n    fetchForecastWeatherData();\n  }, []);\n\n  useEffect(() => {\n    console.log(currentWeatherData?.location.localtime, \"currentWeatherData\");\n\n    // console.log(\n    //   currentWeatherData?.forecast.forecastday[0].hour,\n    //   \"currentWeatherData\"\n    // );\n    const dayNames = currentWeatherData?.forecast.forecastday.map(\n      (day: any) => {\n        const date = new Date(day.date);\n        return date.toLocaleDateString(undefined, { weekday: \"long\" });\n      }\n    );\n    console.log(\"dayNames:\", dayNames);\n  }, [currentWeatherData]);\n\n  const time = getTime(currentWeatherData?.location.localtime);\n  const date = getDate(currentWeatherData?.location.localtime);\n  const days = getDay(currentWeatherData?.location.localtime);\n\n  // if (!currentWeatherData) {\n  //   return <div>Loading...</div>;\n  // }\n  return (\n    <>\n      {console.log(\"in\")}\n\n      <div className=\"weather width--full height--full-viewport\">\n        <div className=\"box flex\">\n          <div className=\"current\">\n            <div className=\"today__weather\">\n              <div className=\"flex align-items--center\">\n                <h3 className=\"text--white\">\n                  {currentWeatherData?.location.name}\n                </h3>\n                <img\n                  src={currentWeatherData?.current.condition.icon}\n                  alt=\"weather-img\"\n                />\n              </div>\n              <p className=\"text--white\">\n                Currently in {currentWeatherData?.location.name} {date}- {time},{\" \"}\n                {days}\n              </p>\n              <h1 className=\"text--white mt--8\">\n                {currentWeatherData?.current.temp_c}°c\n              </h1>\n            </div>\n          </div>\n          <div className=\"forecast\">\n            <h5 className=\"text--center\">7-day Forecast</h5>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,QAAQ,qBAAqB;AAAC;AAAA;AAE/D,MAAMC,OAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAM,IAAI,CAAC;EACvE,MAAM,CAACQ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAM,IAAI,CAAC;EACzE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAS,WAAW,CAAC;EAC7D,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAG,gCAAgC;IAC/C;;IAEA,MAAMC,uBAAuB,GAAG,YAAY;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC7B,kDAAiDH,MAAO,MAAKJ,QAAS,EAAC,CACzE;QACDH,qBAAqB,CAACS,QAAQ,CAACE,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAU,EAAE;QACnBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxC;IACF,CAAC;IAEDN,uBAAuB,EAAE;EAC3B,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAG,gCAAgC;IAE/C,MAAMQ,wBAAwB,GAAG,YAAY;MAC3C,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC7B,kDAAiDH,MAAO,MAAKJ,QAAS,SAAQE,GAAI,EAAC,CACrF;QACDH,sBAAsB,CAACO,QAAQ,CAACE,IAAI,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAU,EAAE;QACnBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxC;IACF,CAAC;IAEDC,wBAAwB,EAAE;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACdqB,OAAO,CAACG,GAAG,CAACjB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAACc,SAAS,EAAE,oBAAoB,CAAC;;IAEzE;IACA;IACA;IACA;IACA,MAAMC,QAAQ,GAAGnB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEoB,QAAQ,CAACC,WAAW,CAACC,GAAG,CAC1DhB,GAAQ,IAAK;MACZ,MAAMiB,IAAI,GAAG,IAAIC,IAAI,CAAClB,GAAG,CAACiB,IAAI,CAAC;MAC/B,OAAOA,IAAI,CAACE,kBAAkB,CAACC,SAAS,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;IAChE,CAAC,CACF;IACDb,OAAO,CAACG,GAAG,CAAC,WAAW,EAAEE,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACnB,kBAAkB,CAAC,CAAC;EAExB,MAAM4B,IAAI,GAAG9B,OAAO,CAACE,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAACc,SAAS,CAAC;EAC5D,MAAMK,IAAI,GAAG3B,OAAO,CAACI,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAACc,SAAS,CAAC;EAC5D,MAAMW,IAAI,GAAGhC,MAAM,CAACG,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAACc,SAAS,CAAC;;EAE3D;EACA;EACA;EACA,oBACE;IAAA,WACGJ,OAAO,CAACG,GAAG,CAAC,IAAI,CAAC,eAElB;MAAK,SAAS,EAAC,2CAA2C;MAAA,uBACxD;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UAAK,SAAS,EAAC,SAAS;UAAA,uBACtB;YAAK,SAAS,EAAC,gBAAgB;YAAA,wBAC7B;cAAK,SAAS,EAAC,0BAA0B;cAAA,wBACvC;gBAAI,SAAS,EAAC,aAAa;gBAAA,UACxBjB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAAC0B;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAC/B,eACL;gBACE,GAAG,EAAE9B,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAE+B,OAAO,CAACC,SAAS,CAACC,IAAK;gBAChD,GAAG,EAAC;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QACjB;YAAA;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAG,SAAS,EAAC,aAAa;cAAA,4BACVjC,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEI,QAAQ,CAAC0B,IAAI,OAAGP,IAAI,QAAIK,IAAI,OAAG,GAAG,EACnEC,IAAI;YAAA;cAAA;cAAA;cAAA;YAAA,QACH,eACJ;cAAI,SAAS,EAAC,mBAAmB;cAAA,WAC9B7B,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAE+B,OAAO,CAACG,MAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QAChC;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,SAAS,EAAC,UAAU;UAAA,uBACvB;YAAI,SAAS,EAAC,cAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAoB;UAAA;UAAA;UAAA;QAAA,QAC5C;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAEP,CAAC;AAAC,GAjGInC,OAAW;AAAA,KAAXA,OAAW;AAmGjB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}