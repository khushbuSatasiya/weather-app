{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx\";\n// import { CategoryScale, Chart, LinearScale, PointElement } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n// Chart.register(LinearScale, CategoryScale, PointElement, Line);\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={props.lineChartData}\n//         options={{\n//           plugins: {\n//             legend: {\n//               display: false,\n//               position: \"bottom\",\n//               labels: {\n//                 color: \"#210873\",\n//                 font: {\n//                   size: 20,\n//                   weight: \"500\",\n//                 },\n//               },\n//             },\n//             tooltip: {\n//               enabled: true,\n//               yAlign: \"bottom\",\n//               backgroundColor: \"#fff\",\n//               bodyColor: \"#000\",\n//               titleColor: \"black\",\n//               bodyFont: {\n//                 size: 20,\n//                 weight: \"500\",\n//               },\n//               displayColors: false,\n//               titleMarginBottom: 20,\n//               boxHeight: 20,\n//               callbacks: {\n//                 title: toolTipTitle,\n//                 label: toolTipLabel,\n//               },\n//               padding: 15,\n//             },\n//           },\n//           scales: {\n//             y: {\n//               display: true,\n//               stacked: true,\n//               beginAtZero: true,\n//               max: 100,\n//               grace: 20,\n//               grid: {\n//                 color: \"white\",\n//               },\n//               ticks: {\n//                 color: \"#210873\",\n//                 font: {\n//                   family: \"Sofia-pro\",\n//                   weight: \"700\",\n//                   size: 15,\n//                 },\n//               },\n//             },\n//             x: {\n//               grid: {\n//                 color: \"white\",\n//               },\n//               ticks: {\n//                 color: \"#210873\",\n//                 font: {\n//                   family: \"Sofia-pro\",\n//                   weight: \"700\",\n//                   size: 15,\n//                 },\n//               },\n//             },\n//             r: {\n//               grid: {\n//                 color: \"white\",\n//               },\n//               // pointLabels: {\n//               // \tcolor: 'black',\n//               // \tfont: {\n//               // \t\tsize: 15,\n//               // \t\tweight: '800'\n//               // \t}\n//               // },\n//               ticks: {\n//                 display: false,\n//               },\n//             },\n//           },\n//           elements: {\n//             point: {\n//               backgroundColor: \"white\",\n//             },\n//           },\n//           maintainAspectRatio: false,\n//         }}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Line Chart\"\n    }\n  }\n};\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\nexport const data = {\n  labels,\n  datasets: [{\n    label: \"Dataset 1\",\n    data: labels.map(label => label),\n    borderColor: \"rgb(255, 99, 132)\",\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n  }, {\n    label: \"Dataset 2\",\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: \"rgb(53, 162, 235)\",\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n  }]\n};\nexport function LineChart() {\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 10\n  }, this);\n}\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","options","responsive","plugins","legend","position","title","display","text","labels","data","datasets","label","map","borderColor","backgroundColor","faker","datatype","number","min","max","LineChart"],"sources":["/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx"],"sourcesContent":["// import { CategoryScale, Chart, LinearScale, PointElement } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n// Chart.register(LinearScale, CategoryScale, PointElement, Line);\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={props.lineChartData}\n//         options={{\n//           plugins: {\n//             legend: {\n//               display: false,\n//               position: \"bottom\",\n//               labels: {\n//                 color: \"#210873\",\n//                 font: {\n//                   size: 20,\n//                   weight: \"500\",\n//                 },\n//               },\n//             },\n//             tooltip: {\n//               enabled: true,\n//               yAlign: \"bottom\",\n//               backgroundColor: \"#fff\",\n//               bodyColor: \"#000\",\n//               titleColor: \"black\",\n//               bodyFont: {\n//                 size: 20,\n//                 weight: \"500\",\n//               },\n//               displayColors: false,\n//               titleMarginBottom: 20,\n//               boxHeight: 20,\n//               callbacks: {\n//                 title: toolTipTitle,\n//                 label: toolTipLabel,\n//               },\n//               padding: 15,\n//             },\n//           },\n//           scales: {\n//             y: {\n//               display: true,\n//               stacked: true,\n//               beginAtZero: true,\n//               max: 100,\n//               grace: 20,\n//               grid: {\n//                 color: \"white\",\n//               },\n//               ticks: {\n//                 color: \"#210873\",\n//                 font: {\n//                   family: \"Sofia-pro\",\n//                   weight: \"700\",\n//                   size: 15,\n//                 },\n//               },\n//             },\n//             x: {\n//               grid: {\n//                 color: \"white\",\n//               },\n//               ticks: {\n//                 color: \"#210873\",\n//                 font: {\n//                   family: \"Sofia-pro\",\n//                   weight: \"700\",\n//                   size: 15,\n//                 },\n//               },\n//             },\n//             r: {\n//               grid: {\n//                 color: \"white\",\n//               },\n//               // pointLabels: {\n//               // \tcolor: 'black',\n//               // \tfont: {\n//               // \t\tsize: 15,\n//               // \t\tweight: '800'\n//               // \t}\n//               // },\n//               ticks: {\n//                 display: false,\n//               },\n//             },\n//           },\n//           elements: {\n//             point: {\n//               backgroundColor: \"white\",\n//             },\n//           },\n//           maintainAspectRatio: false,\n//         }}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\nimport React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\" as const,\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Line Chart\",\n    },\n  },\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: labels.map((label) => label),\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: \"Dataset 2\",\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ],\n};\n\nexport function LineChart() {\n  return <Line options={options} data={data} />;\n}\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,OAAO,MAAMG,OAAO,GAAG;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;AAE/E,OAAO,MAAMC,IAAI,GAAG;EAClBD,MAAM;EACNE,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,WAAW;IAClBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAED,KAAK,IAAKA,KAAK,CAAC;IAClCE,WAAW,EAAE,mBAAmB;IAChCC,eAAe,EAAE;EACnB,CAAC,EACD;IACEH,KAAK,EAAE,WAAW;IAClBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAMG,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC,CAAC;IACxEN,WAAW,EAAE,mBAAmB;IAChCC,eAAe,EAAE;EACnB,CAAC;AAEL,CAAC;AAED,OAAO,SAASM,SAAS,GAAG;EAC1B,oBAAO,QAAC,IAAI;IAAC,OAAO,EAAEpB,OAAQ;IAAC,IAAI,EAAES;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG;AAC/C;AAAC,KAFeW,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}