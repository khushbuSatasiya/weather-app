{"ast":null,"code":"var _jsxFileName = \"/home/scaletech/Documents/Work-space/base-frontend-x-master/src/features/auth/component/loginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport AuthService from 'shared/services/auth.service';\nimport HttpService from 'shared/services/http.service';\nimport { API_CONFIG } from 'shared/constants/api';\nimport { createAction } from 'shared/util/utility';\nimport { HidePasswordIcon, ShowPasswordIcon } from 'shared/components/icons/icons';\nimport { PASSWORD_REGEX } from 'shared/constants';\nimport * as actionTypes from 'store/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(values => {\n    const params = {\n      email: values.email,\n      password: values.password\n    };\n    setLoading(true);\n    HttpService.post(API_CONFIG.path.login, params).then(res => {\n      setLoading(false);\n      res.data && AuthService.setAuthData(res.data.token);\n      dispatch(createAction(actionTypes.AUTH_SUCCESS));\n      dispatch(createAction(actionTypes.UPDATE_USER_DATA, res.data));\n    }).catch(err => {\n      setLoading(false);\n      dispatch(createAction(actionTypes.AUTH_FAILED));\n      console.log('Error', err);\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: loginFormValidationSchema,\n    validateOnChange: true,\n    validateOnBlur: true,\n    validateOnMount: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item mb--25 position--relative\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          className: \"input-field font--regular width--full border-radius--sm bg--grey-300 text--white\",\n          autoComplete: \"off\",\n          placeholder: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"p\",\n          className: \"text--red-400 font-size--xxs pl--10 error-message mt--10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item mb--25 position--relative\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: showPassword ? 'text' : 'password',\n          className: \"input-field font-regular width--full border-radius--sm bg--grey-300 text--white\",\n          autoComplete: \"off\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-icon position--absolute  flex cursor--pointer align-items--center\",\n          onClick: () => setShowPassword(!showPassword),\n          children: showPassword ? /*#__PURE__*/_jsxDEV(ShowPasswordIcon, {\n            className: \"fill--comet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this) : /*#__PURE__*/_jsxDEV(HidePasswordIcon, {\n            className: \"fill--white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"p\",\n          className: \"text--red-400 font-size--xxs pl--10 error-message mt--10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex align-items--center justify-content--end mb--15\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/forgot-password'\n          },\n          className: \"forgot-password font-size--default text-decoration--underline text--primary\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        className: \"login-btn width--full font-size--lg text--uppercase text--white border-radius--default no--border bg--primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(LoginForm, \"Z2g8ergNmb4pPEQwP1WXjoobvlw=\", false, function () {\n  return [useDispatch];\n});\n_c = LoginForm;\nconst initialValues = {\n  email: '',\n  password: ''\n};\nconst loginFormValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Please Enter Valid Email').required('Please Enter Email').strict(true),\n  password: Yup.string().required('Please Enter Password').matches(PASSWORD_REGEX, 'Must Contain 8 Characters, One Number and One Special Case Character ').strict(true)\n});\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useCallback","useState","Link","useDispatch","Formik","Field","ErrorMessage","Form","Yup","AuthService","HttpService","API_CONFIG","createAction","HidePasswordIcon","ShowPasswordIcon","PASSWORD_REGEX","actionTypes","LoginForm","showPassword","setShowPassword","loading","setLoading","dispatch","onSubmit","values","params","email","password","post","path","login","then","res","data","setAuthData","token","AUTH_SUCCESS","UPDATE_USER_DATA","catch","err","AUTH_FAILED","console","log","initialValues","loginFormValidationSchema","pathname","object","shape","string","required","strict","matches"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/features/auth/component/loginForm.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, FormikValues, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport AuthService from 'shared/services/auth.service';\nimport HttpService from 'shared/services/http.service';\nimport { API_CONFIG } from 'shared/constants/api';\nimport { createAction } from 'shared/util/utility';\nimport { HidePasswordIcon, ShowPasswordIcon } from 'shared/components/icons/icons';\nimport { PASSWORD_REGEX } from 'shared/constants';\nimport * as actionTypes from 'store/actionTypes';\n\nconst LoginForm: React.FC = () => {\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst dispatch = useDispatch();\n\n\tconst onSubmit = useCallback(\n\t\t(values: FormikValues) => {\n\t\t\tconst params = {\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password\n\t\t\t};\n\n\t\t\tsetLoading(true);\n\t\t\tHttpService.post(API_CONFIG.path.login, params)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tres.data && AuthService.setAuthData(res.data.token);\n\t\t\t\t\tdispatch(createAction(actionTypes.AUTH_SUCCESS));\n\t\t\t\t\tdispatch(createAction(actionTypes.UPDATE_USER_DATA, res.data));\n\t\t\t\t})\n\t\t\t\t.catch((err: Error) => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tdispatch(createAction(actionTypes.AUTH_FAILED));\n\t\t\t\t\tconsole.log('Error', err);\n\t\t\t\t});\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tonSubmit={onSubmit}\n\t\t\tvalidationSchema={loginFormValidationSchema}\n\t\t\tvalidateOnChange\n\t\t\tvalidateOnBlur\n\t\t\tvalidateOnMount\n\t\t>\n\t\t\t<Form>\n\t\t\t\t<div className='form-item mb--25 position--relative'>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tclassName='input-field font--regular width--full border-radius--sm bg--grey-300 text--white'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tplaceholder='Email Address'\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tcomponent='p'\n\t\t\t\t\t\tclassName='text--red-400 font-size--xxs pl--10 error-message mt--10'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-item mb--25 position--relative'>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\tclassName='input-field font-regular width--full border-radius--sm bg--grey-300 text--white'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='password-icon position--absolute  flex cursor--pointer align-items--center'\n\t\t\t\t\t\tonClick={() => setShowPassword(!showPassword)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showPassword ? (\n\t\t\t\t\t\t\t<ShowPasswordIcon className='fill--comet' />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<HidePasswordIcon className='fill--white' />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tcomponent='p'\n\t\t\t\t\t\tclassName='text--red-400 font-size--xxs pl--10 error-message mt--10'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex align-items--center justify-content--end mb--15'>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/forgot-password'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName='forgot-password font-size--default text-decoration--underline text--primary'\n\t\t\t\t\t>\n\t\t\t\t\t\tForgot Password?\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t\tclassName='login-btn width--full font-size--lg text--uppercase text--white border-radius--default no--border bg--primary'\n\t\t\t\t\ttype='submit'\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</Form>\n\t\t</Formik>\n\t);\n};\n\nconst initialValues = {\n\temail: '',\n\tpassword: ''\n};\n\nconst loginFormValidationSchema = Yup.object().shape({\n\temail: Yup.string().email('Please Enter Valid Email').required('Please Enter Email').strict(true),\n\tpassword: Yup.string()\n\t\t.required('Please Enter Password')\n\t\t.matches(PASSWORD_REGEX, 'Must Contain 8 Characters, One Number and One Special Case Character ')\n\t\t.strict(true)\n});\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}