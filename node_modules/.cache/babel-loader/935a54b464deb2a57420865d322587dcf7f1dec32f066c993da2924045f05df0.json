{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx\";\n// import {\n//   CategoryScale,\n//   Chart,\n//   ChartOptions,\n//   LinearScale,\n//   PointElement,\n// } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n// Chart.register(LinearScale, CategoryScale, PointElement);\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n//   console.log(props.lineChartData, \"lineChartData\");\n//   const options: ChartOptions<\"line\"> = {\n//     plugins: {\n//       legend: {\n//         display: false,\n//         position: \"bottom\",\n//         labels: {\n//           color: \"#210873\",\n//           font: {\n//             size: 20,\n//             weight: \"500\",\n//           },\n//         },\n//       },\n//       tooltip: {\n//         enabled: true,\n//         yAlign: \"bottom\",\n//         backgroundColor: \"#fff\",\n//         bodyColor: \"#000\",\n//         titleColor: \"black\",\n//         bodyFont: {\n//           size: 20,\n//           weight: \"500\",\n//         },\n//         displayColors: false,\n//         titleMarginBottom: 20,\n//         boxHeight: 20,\n//         callbacks: {\n//           title: toolTipTitle,\n//           label: toolTipLabel,\n//         },\n//         padding: 15,\n//       },\n//     },\n//     scales: {\n//       y: {\n//         display: true,\n//         stacked: true,\n//         beginAtZero: true,\n//         max: 100,\n//         grace: 20,\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       x: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       r: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         // pointLabels: {\n//         // \tcolor: 'black',\n//         // \tfont: {\n//         // \t\tsize: 15,\n//         // \t\tweight: '800'\n//         // \t}\n//         // },\n//         ticks: {\n//           display: false,\n//         },\n//       },\n//     },\n//     elements: {\n//       point: {\n//         backgroundColor: \"white\",\n//       },\n//     },\n//     maintainAspectRatio: false,\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={\n//           [\n//             {\n//               axis: \"y\",\n//               label: \"My First Dataset\",\n//               data: [65, 59, 80, 81, 56, 55, 40],\n//               fill: false,\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//                 \"rgba(255, 205, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(201, 203, 207, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgb(255, 99, 132)\",\n//                 \"rgb(255, 159, 64)\",\n//                 \"rgb(255, 205, 86)\",\n//                 \"rgb(75, 192, 192)\",\n//                 \"rgb(54, 162, 235)\",\n//                 \"rgb(153, 102, 255)\",\n//                 \"rgb(201, 203, 207)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//           ] as any\n//         }\n//         options={options}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\n\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  const chartData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [{\n      label: \"Sales\",\n      data: [120, 150, 200, 180, 220, 250],\n      fill: false,\n      borderColor: \"rgb(75, 192, 192)\",\n      tension: 0.4\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["Line","LineChart","chartData","labels","datasets","label","data","fill","borderColor","tension","chartOptions","scales","y","beginAtZero"],"sources":["/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx"],"sourcesContent":["// import {\n//   CategoryScale,\n//   Chart,\n//   ChartOptions,\n//   LinearScale,\n//   PointElement,\n// } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n// Chart.register(LinearScale, CategoryScale, PointElement);\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n//   console.log(props.lineChartData, \"lineChartData\");\n//   const options: ChartOptions<\"line\"> = {\n//     plugins: {\n//       legend: {\n//         display: false,\n//         position: \"bottom\",\n//         labels: {\n//           color: \"#210873\",\n//           font: {\n//             size: 20,\n//             weight: \"500\",\n//           },\n//         },\n//       },\n//       tooltip: {\n//         enabled: true,\n//         yAlign: \"bottom\",\n//         backgroundColor: \"#fff\",\n//         bodyColor: \"#000\",\n//         titleColor: \"black\",\n//         bodyFont: {\n//           size: 20,\n//           weight: \"500\",\n//         },\n//         displayColors: false,\n//         titleMarginBottom: 20,\n//         boxHeight: 20,\n//         callbacks: {\n//           title: toolTipTitle,\n//           label: toolTipLabel,\n//         },\n//         padding: 15,\n//       },\n//     },\n//     scales: {\n//       y: {\n//         display: true,\n//         stacked: true,\n//         beginAtZero: true,\n//         max: 100,\n//         grace: 20,\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       x: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       r: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         // pointLabels: {\n//         // \tcolor: 'black',\n//         // \tfont: {\n//         // \t\tsize: 15,\n//         // \t\tweight: '800'\n//         // \t}\n//         // },\n//         ticks: {\n//           display: false,\n//         },\n//       },\n//     },\n//     elements: {\n//       point: {\n//         backgroundColor: \"white\",\n//       },\n//     },\n//     maintainAspectRatio: false,\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={\n//           [\n//             {\n//               axis: \"y\",\n//               label: \"My First Dataset\",\n//               data: [65, 59, 80, 81, 56, 55, 40],\n//               fill: false,\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//                 \"rgba(255, 205, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(201, 203, 207, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgb(255, 99, 132)\",\n//                 \"rgb(255, 159, 64)\",\n//                 \"rgb(255, 205, 86)\",\n//                 \"rgb(75, 192, 192)\",\n//                 \"rgb(54, 162, 235)\",\n//                 \"rgb(153, 102, 255)\",\n//                 \"rgb(201, 203, 207)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//           ] as any\n//         }\n//         options={options}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\n\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = () => {\n  const chartData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [120, 150, 200, 180, 220, 250],\n        fill: false,\n        borderColor: \"rgb(75, 192, 192)\",\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line data={chartData} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappingsiBAAiB;AAAC;AAEvC,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;IAChEC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACpCC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,IAAI,EAAEX,SAAU;MAAC,OAAO,EAAEQ;IAAa;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV,CAAC;AAAC,KA3BIT,SAAS;AA6Bf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}