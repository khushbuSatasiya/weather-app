{"ast":null,"code":"var _jsxFileName = \"/home/scaletech/Documents/Work-space/base-frontend-x-master/src/hoc/withErrorHandler/errorHandler.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { axiosInstance } from 'shared/services/http.service';\nimport { createAction } from 'shared/util/utility';\nimport Notification, { notify } from 'shared/components/notification/notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorHandler = () => {\n  _s();\n  const dispatch = useDispatch();\n  const logout = useCallback(() => {\n    // dispatch(createAction(actionTypes.LOGOUT_SUCCESS));\n    dispatch(createAction('RESET_MODAL'));\n  }, [dispatch]);\n  useEffect(() => {\n    const resInterceptor = axiosInstance.interceptors.response.use(res => {\n      const data = res.data;\n      if (data && data.message) {\n        if (data.isError) {\n          notify(data.message, 'error');\n          throw new Error(data.message);\n        } else {\n          notify(data.message, 'success');\n        }\n      }\n      return res;\n    }, error => {\n      const res = error.response;\n      // check if error is having data\n      if (res && res.data && res.status) {\n        const status = res.status;\n        const responseData = res.data;\n\n        // is http error code is 401, log out of the application\n        if (status === 401 && responseData) {\n          logout();\n          notify(error.message, 'error');\n        } else if (res && responseData && responseData.message) {\n          // if error data contains message field, add error notification\n          notify(responseData.message, 'error');\n        } else {\n          notify(error.message, 'error');\n        }\n        throw error;\n      }\n    });\n    return () => axiosInstance.interceptors.response.eject(resInterceptor);\n  }, [logout]);\n  return /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ErrorHandler, \"6mBFkziuMOIe+AC/au9JtZDMW+4=\", false, function () {\n  return [useDispatch];\n});\n_c = ErrorHandler;\nexport default ErrorHandler;\nvar _c;\n$RefreshReg$(_c, \"ErrorHandler\");","map":{"version":3,"names":["useCallback","useEffect","useDispatch","axiosInstance","createAction","Notification","notify","ErrorHandler","dispatch","logout","resInterceptor","interceptors","response","use","res","data","message","isError","Error","error","status","responseData","eject"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/hoc/withErrorHandler/errorHandler.tsx"],"sourcesContent":["import { FC, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AxiosResponse, AxiosError } from 'axios';\n\nimport { axiosInstance } from 'shared/services/http.service';\nimport { createAction } from 'shared/util/utility';\nimport { IResponseObject } from 'shared/interface';\nimport Notification, { notify } from 'shared/components/notification/notification';\n\nconst ErrorHandler: FC = () => {\n\tconst dispatch = useDispatch();\n\n\tconst logout = useCallback(() => {\n\t\t// dispatch(createAction(actionTypes.LOGOUT_SUCCESS));\n\t\tdispatch(createAction('RESET_MODAL'));\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tconst resInterceptor = axiosInstance.interceptors.response.use(\n\t\t\t(res: AxiosResponse<IResponseObject<any>>) => {\n\t\t\t\tconst data = res.data;\n\t\t\t\tif (data && data.message) {\n\t\t\t\t\tif (data.isError) {\n\t\t\t\t\t\tnotify(data.message, 'error');\n\t\t\t\t\t\tthrow new Error(data.message as string);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotify(data.message, 'success');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\t(error: AxiosError<IResponseObject<any>>) => {\n\t\t\t\tconst res = error.response;\n\t\t\t\t// check if error is having data\n\t\t\t\tif (res && res.data && res.status) {\n\t\t\t\t\tconst status = res.status;\n\t\t\t\t\tconst responseData = res.data;\n\n\t\t\t\t\t// is http error code is 401, log out of the application\n\t\t\t\t\tif (status === 401 && responseData) {\n\t\t\t\t\t\tlogout();\n\t\t\t\t\t\tnotify(error.message, 'error');\n\t\t\t\t\t} else if (res && responseData && responseData.message) {\n\t\t\t\t\t\t// if error data contains message field, add error notification\n\t\t\t\t\t\tnotify(responseData.message, 'error');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotify(error.message, 'error');\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn () => axiosInstance.interceptors.response.eject(resInterceptor);\n\t}, [logout]);\n\n\treturn <Notification />;\n};\n\nexport default ErrorHandler;\n"],"mappings":";;AAAA,SAAaA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,YAAY,QAAQ,qBAAqB;AAElD,OAAOC,YAAY,IAAIC,MAAM,QAAQ,6CAA6C;AAAC;AAEnF,MAAMC,YAAgB,GAAG,MAAM;EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAE9B,MAAMO,MAAM,GAAGT,WAAW,CAAC,MAAM;IAChC;IACAQ,QAAQ,CAACJ,YAAY,CAAC,aAAa,CAAC,CAAC;EACtC,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEdP,SAAS,CAAC,MAAM;IACf,MAAMS,cAAc,GAAGP,aAAa,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5DC,GAAwC,IAAK;MAC7C,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAI;MACrB,IAAIA,IAAI,IAAIA,IAAI,CAACC,OAAO,EAAE;QACzB,IAAID,IAAI,CAACE,OAAO,EAAE;UACjBX,MAAM,CAACS,IAAI,CAACC,OAAO,EAAE,OAAO,CAAC;UAC7B,MAAM,IAAIE,KAAK,CAACH,IAAI,CAACC,OAAO,CAAW;QACxC,CAAC,MAAM;UACNV,MAAM,CAACS,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;QAChC;MACD;MAEA,OAAOF,GAAG;IACX,CAAC,EACAK,KAAuC,IAAK;MAC5C,MAAML,GAAG,GAAGK,KAAK,CAACP,QAAQ;MAC1B;MACA,IAAIE,GAAG,IAAIA,GAAG,CAACC,IAAI,IAAID,GAAG,CAACM,MAAM,EAAE;QAClC,MAAMA,MAAM,GAAGN,GAAG,CAACM,MAAM;QACzB,MAAMC,YAAY,GAAGP,GAAG,CAACC,IAAI;;QAE7B;QACA,IAAIK,MAAM,KAAK,GAAG,IAAIC,YAAY,EAAE;UACnCZ,MAAM,EAAE;UACRH,MAAM,CAACa,KAAK,CAACH,OAAO,EAAE,OAAO,CAAC;QAC/B,CAAC,MAAM,IAAIF,GAAG,IAAIO,YAAY,IAAIA,YAAY,CAACL,OAAO,EAAE;UACvD;UACAV,MAAM,CAACe,YAAY,CAACL,OAAO,EAAE,OAAO,CAAC;QACtC,CAAC,MAAM;UACNV,MAAM,CAACa,KAAK,CAACH,OAAO,EAAE,OAAO,CAAC;QAC/B;QACA,MAAMG,KAAK;MACZ;IACD,CAAC,CACD;IAED,OAAO,MAAMhB,aAAa,CAACQ,YAAY,CAACC,QAAQ,CAACU,KAAK,CAACZ,cAAc,CAAC;EACvE,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,oBAAO,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AACxB,CAAC;AAAC,GAjDIF,YAAgB;EAAA,QACJL,WAAW;AAAA;AAAA,KADvBK,YAAgB;AAmDtB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}