{"ast":null,"code":"import { combineReducers } from 'redux';\nimport loadingReducer from './loadingReducer';\nimport authReducer from 'features/auth/store/reducer';\nimport AuthService from 'shared/services/auth.service';\nconst appReducer = combineReducers({\n  loading: loadingReducer,\n  auth: authReducer\n});\nconst rootReducer = (state, action) => {\n  if (action.type === 'AUTH_LOGOUT') {\n    AuthService.removeAuthData();\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","loadingReducer","authReducer","AuthService","appReducer","loading","auth","rootReducer","state","action","type","removeAuthData","undefined"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/store/reducer.ts"],"sourcesContent":["import { combineReducers } from 'redux';\n\nimport { IAction, IState } from 'shared/interface/state';\n\nimport loadingReducer from './loadingReducer';\nimport authReducer from 'features/auth/store/reducer';\nimport AuthService from 'shared/services/auth.service';\n\nconst appReducer = combineReducers({\n\tloading: loadingReducer,\n\tauth: authReducer\n});\n\nconst rootReducer = (state: IState | undefined, action: IAction) => {\n\tif (action.type === 'AUTH_LOGOUT') {\n\t\tAuthService.removeAuthData();\n\t\tstate = undefined;\n\t}\n\treturn appReducer(state, action);\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAIvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,MAAMC,UAAU,GAAGJ,eAAe,CAAC;EAClCK,OAAO,EAAEJ,cAAc;EACvBK,IAAI,EAAEJ;AACP,CAAC,CAAC;AAEF,MAAMK,WAAW,GAAG,CAACC,KAAyB,EAAEC,MAAe,KAAK;EACnE,IAAIA,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IAClCP,WAAW,CAACQ,cAAc,EAAE;IAC5BH,KAAK,GAAGI,SAAS;EAClB;EACA,OAAOR,UAAU,CAACI,KAAK,EAAEC,MAAM,CAAC;AACjC,CAAC;AAED,eAAeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}