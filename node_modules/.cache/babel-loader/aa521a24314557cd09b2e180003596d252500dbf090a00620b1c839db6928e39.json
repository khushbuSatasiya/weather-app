{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducer';\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//check if redux dev tool extension is installed by user and if yes use that\nconst composeEnhancers = process.env.NODE_ENV === 'development' && reduxDevTools ? reduxDevTools : compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","compose","thunk","rootReducer","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","process","env","NODE_ENV","store"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/store.ts"],"sourcesContent":["import { legacy_createStore as createStore } from 'redux';\nimport { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducer';\n\nconst reduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//check if redux dev tool extension is installed by user and if yes use that\nconst composeEnhancers = process.env.NODE_ENV === 'development' && reduxDevTools ? reduxDevTools : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,SAASC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,iBAAiB;AAEzC,MAAMC,aAAa,GAAIC,MAAM,CAASC,oCAAoC;;AAE1E;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIN,aAAa,GAAGA,aAAa,GAAGH,OAAO;AAE1G,MAAMU,KAAK,GAAGZ,WAAW,CAACI,WAAW,EAAEI,gBAAgB,CAACP,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAEhF,eAAeS,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}