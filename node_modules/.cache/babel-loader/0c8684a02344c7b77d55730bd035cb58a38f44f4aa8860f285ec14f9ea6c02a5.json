{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx\";\n// import {\n//   CategoryScale,\n//   Chart,\n//   ChartOptions,\n//   LinearScale,\n//   PointElement,\n// } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n//   console.log(props.lineChartData, \"lineChartData\");\n//   const options: ChartOptions<\"line\"> = {\n//     plugins: {\n//       legend: {\n//         display: false,\n//         position: \"bottom\",\n//         labels: {\n//           color: \"#210873\",\n//           font: {\n//             size: 20,\n//             weight: \"500\",\n//           },\n//         },\n//       },\n//       tooltip: {\n//         enabled: true,\n//         yAlign: \"bottom\",\n//         backgroundColor: \"#fff\",\n//         bodyColor: \"#000\",\n//         titleColor: \"black\",\n//         bodyFont: {\n//           size: 20,\n//           weight: \"500\",\n//         },\n//         displayColors: false,\n//         titleMarginBottom: 20,\n//         boxHeight: 20,\n//         callbacks: {\n//           title: toolTipTitle,\n//           label: toolTipLabel,\n//         },\n//         padding: 15,\n//       },\n//     },\n//     scales: {\n//       y: {\n//         display: true,\n//         stacked: true,\n//         beginAtZero: true,\n//         max: 100,\n//         grace: 20,\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       x: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       r: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         // pointLabels: {\n//         // \tcolor: 'black',\n//         // \tfont: {\n//         // \t\tsize: 15,\n//         // \t\tweight: '800'\n//         // \t}\n//         // },\n//         ticks: {\n//           display: false,\n//         },\n//       },\n//     },\n//     elements: {\n//       point: {\n//         backgroundColor: \"white\",\n//       },\n//     },\n//     maintainAspectRatio: false,\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={\n//           [\n//             {\n//               axis: \"y\",\n//               label: \"My First Dataset\",\n//               data: [65, 59, 80, 81, 56, 55, 40],\n//               fill: false,\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//                 \"rgba(255, 205, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(201, 203, 207, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgb(255, 99, 132)\",\n//                 \"rgb(255, 159, 64)\",\n//                 \"rgb(255, 205, 86)\",\n//                 \"rgb(75, 192, 192)\",\n//                 \"rgb(54, 162, 235)\",\n//                 \"rgb(153, 102, 255)\",\n//                 \"rgb(201, 203, 207)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//           ] as any\n//         }\n//         options={options}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\n\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title } from \"chart.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title);\nconst LineChart = props => {\n  const {\n    chartData\n  } = props;\n  const data = {\n    labels: chartData.map(data => new Date(data.time).toLocaleDateString()),\n    datasets: [{\n      label: \"Sales\",\n      data: chartData.map(data => data.temp_c),\n      fill: false,\n      borderColor: \"rgb(75, 192, 192)\",\n      tension: 0.4\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","React","register","LineChart","props","chartData","data","labels","map","Date","time","toLocaleDateString","datasets","label","temp_c","fill","borderColor","tension","chartOptions","scales","y","beginAtZero"],"sources":["/home/khushbu/workspace/weather-app/src/features/weather/component/lineChart.tsx"],"sourcesContent":["// import {\n//   CategoryScale,\n//   Chart,\n//   ChartOptions,\n//   LinearScale,\n//   PointElement,\n// } from \"chart.js\";\n// import { FC } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// interface IProps {\n//   lineChartData: any;\n// }\n\n// const LineChart: FC<IProps> = (props) => {\n//   const toolTipLabel = (context: any) => {\n//     return `${context.raw}%`;\n//   };\n//   const toolTipTitle = () => {\n//     return \"\";\n//   };\n//   console.log(props.lineChartData, \"lineChartData\");\n//   const options: ChartOptions<\"line\"> = {\n//     plugins: {\n//       legend: {\n//         display: false,\n//         position: \"bottom\",\n//         labels: {\n//           color: \"#210873\",\n//           font: {\n//             size: 20,\n//             weight: \"500\",\n//           },\n//         },\n//       },\n//       tooltip: {\n//         enabled: true,\n//         yAlign: \"bottom\",\n//         backgroundColor: \"#fff\",\n//         bodyColor: \"#000\",\n//         titleColor: \"black\",\n//         bodyFont: {\n//           size: 20,\n//           weight: \"500\",\n//         },\n//         displayColors: false,\n//         titleMarginBottom: 20,\n//         boxHeight: 20,\n//         callbacks: {\n//           title: toolTipTitle,\n//           label: toolTipLabel,\n//         },\n//         padding: 15,\n//       },\n//     },\n//     scales: {\n//       y: {\n//         display: true,\n//         stacked: true,\n//         beginAtZero: true,\n//         max: 100,\n//         grace: 20,\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       x: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         ticks: {\n//           color: \"#210873\",\n//           font: {\n//             family: \"Sofia-pro\",\n//             weight: \"700\",\n//             size: 15,\n//           },\n//         },\n//       },\n//       r: {\n//         grid: {\n//           color: \"white\",\n//         },\n//         // pointLabels: {\n//         // \tcolor: 'black',\n//         // \tfont: {\n//         // \t\tsize: 15,\n//         // \t\tweight: '800'\n//         // \t}\n//         // },\n//         ticks: {\n//           display: false,\n//         },\n//       },\n//     },\n//     elements: {\n//       point: {\n//         backgroundColor: \"white\",\n//       },\n//     },\n//     maintainAspectRatio: false,\n//   };\n\n//   return (\n//     <>\n//       <Line\n//         data={\n//           [\n//             {\n//               axis: \"y\",\n//               label: \"My First Dataset\",\n//               data: [65, 59, 80, 81, 56, 55, 40],\n//               fill: false,\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//                 \"rgba(255, 205, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(201, 203, 207, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgb(255, 99, 132)\",\n//                 \"rgb(255, 159, 64)\",\n//                 \"rgb(255, 205, 86)\",\n//                 \"rgb(75, 192, 192)\",\n//                 \"rgb(54, 162, 235)\",\n//                 \"rgb(153, 102, 255)\",\n//                 \"rgb(201, 203, 207)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//           ] as any\n//         }\n//         options={options}\n//       />\n//     </>\n//   );\n// };\n\n// export default LineChart;\n\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  ChartData,\n} from \"chart.js\";\nimport React from \"react\";\n\ninterface IProps {\n  chartData: any;\n}\n\nChartJS.register(LineElement, PointElement, LinearScale, Title);\nconst LineChart: React.FC<IProps> = (props) => {\n  const { chartData } = props;\n\n  const data = {\n    labels: chartData.map((data: any) =>\n      new Date(data.time).toLocaleDateString()\n    ),\n    datasets: [\n      {\n        label: \"Sales\",\n        data: chartData.map((data: any) => data.temp_c),\n        fill: false,\n        borderColor: \"rgb(75, 192, 192)\",\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line data={data} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappingsiBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,QAEA,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAM1BL,OAAO,CAACM,QAAQ,CAACL,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,CAAC;AAC/D,MAAMG,SAA2B,GAAIC,KAAK,IAAK;EAC7C,MAAM;IAAEC;EAAU,CAAC,GAAGD,KAAK;EAE3B,MAAME,IAAI,GAAG;IACXC,MAAM,EAAEF,SAAS,CAACG,GAAG,CAAEF,IAAS,IAC9B,IAAIG,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,CAACC,kBAAkB,EAAE,CACzC;IACDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdP,IAAI,EAAED,SAAS,CAACG,GAAG,CAAEF,IAAS,IAAKA,IAAI,CAACQ,MAAM,CAAC;MAC/CC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,IAAI,EAAEf,IAAK;MAAC,OAAO,EAAEY;IAAa;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACvC;AAEV,CAAC;AAAC,KA/BIf,SAA2B;AAiCjC,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}