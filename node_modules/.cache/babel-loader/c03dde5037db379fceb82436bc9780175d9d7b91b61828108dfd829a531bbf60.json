{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from 'shared/constants';\nimport { getUrl } from 'shared/constants/api';\nconst axiosInstance = axios.create();\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let otherData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return commonAxios({\n    method: 'GET',\n    url: getUrl(url, params),\n    ...otherData\n  });\n};\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let otherData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return commonAxios({\n    method: 'POST',\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let otherData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return commonAxios({\n    method: 'PUT',\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let otherData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return commonAxios({\n    method: 'DELETE',\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = function (url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let otherData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return commonAxios({\n    method: 'PATCH',\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type, isLogin\n */\nconst commonAxios = config => {\n  const {\n    method,\n    url,\n    data,\n    contentType = 'application/json',\n    isPublic = false,\n    isAccessTokenRequire = true\n  } = config;\n  const headers = {\n    'Content-Type': contentType\n  };\n\n  // if end point is public than no need to provide access token\n  if (!isPublic) {\n    // const token = getAccessToken();\n    // if (token) {\n    // \theaders['x-access-token'] = `${token}`;\n    // }\n  }\n  const token = isAccessTokenRequire && AuthService.getAccessToken();\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  } else {\n    headers['x-request-language'] = localStorage.getItem('lang') || 'en';\n  }\n  let body = null;\n  if (contentType === 'application/json') {\n    body = JSON.stringify(data);\n  } else {\n    body = data;\n  }\n  const axiosInstanceParams = {\n    method: method,\n    baseURL: API_BASE_URL,\n    url: url,\n    cancelToken: config.cancelToken,\n    headers: headers,\n    data: body\n  };\n  return new Promise((resolve, reject) => {\n    axiosInstance(axiosInstanceParams).then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nexport { axiosInstance };\nconst HttpService = {\n  get: get,\n  post: post,\n  put: put,\n  deleteRequest: deleteRequest,\n  patch: patch\n};\nexport default HttpService;","map":{"version":3,"names":["axios","API_BASE_URL","getUrl","axiosInstance","create","get","url","params","otherData","commonAxios","method","post","data","put","deleteRequest","patch","config","contentType","isPublic","isAccessTokenRequire","headers","token","AuthService","getAccessToken","localStorage","getItem","body","JSON","stringify","axiosInstanceParams","baseURL","cancelToken","Promise","resolve","reject","then","response","catch","error","HttpService"],"sources":["/home/scaletech/Documents/Work-space/base-frontend-x-master/src/shared/services/http.service.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse, CancelToken } from 'axios';\nimport { API_BASE_URL } from 'shared/constants';\nimport { getUrl } from 'shared/constants/api';\nimport { IResponseObject } from 'shared/interface';\n\nconst axiosInstance = axios.create();\n\ninterface IMiscellaneousRequestParams {\n\tcontentType?: string;\n\tisPublic?: boolean;\n\tcancelToken?: CancelToken;\n}\n\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = (url: string, params: any = {}, otherData: IMiscellaneousRequestParams = {}) =>\n\tcommonAxios({ method: 'GET', url: getUrl(url, params), ...otherData });\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = (url: string, params: any = {}, otherData: IMiscellaneousRequestParams = {}) =>\n\tcommonAxios({ method: 'POST', url: getUrl(url), data: params, ...otherData });\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = (url: string, params: any = {}, otherData: IMiscellaneousRequestParams = {}) =>\n\tcommonAxios({ method: 'PUT', url: getUrl(url), data: params, ...otherData });\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = (url: string, params: any = {}, otherData: IMiscellaneousRequestParams = {}) =>\n\tcommonAxios({ method: 'DELETE', url: getUrl(url), data: params, ...otherData });\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = (url: string, params: any = {}, otherData: IMiscellaneousRequestParams = {}) =>\n\tcommonAxios({ method: 'PATCH', url: getUrl(url), data: params, ...otherData });\n\ninterface IAxiosParams extends IMiscellaneousRequestParams {\n\tmethod: string;\n\turl: string;\n\tdata?: any;\n}\n\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type, isLogin\n */\nconst commonAxios = (config: IAxiosParams): Promise<any> => {\n\tconst {\n\t\tmethod,\n\t\turl,\n\t\tdata,\n\t\tcontentType = 'application/json',\n\t\tisPublic = false,\n\t\tisAccessTokenRequire = true\n\t} = config;\n\tconst headers: any = {\n\t\t'Content-Type': contentType\n\t};\n\n\t// if end point is public than no need to provide access token\n\tif (!isPublic) {\n\t\t// const token = getAccessToken();\n\t\t// if (token) {\n\t\t// \theaders['x-access-token'] = `${token}`;\n\t\t// }\n\t}\n\tconst token = isAccessTokenRequire && AuthService.getAccessToken();\n\n\tif (token) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t} else {\n\t\theaders['x-request-language'] = localStorage.getItem('lang') || 'en';\n\t}\n\n\tlet body: any = null;\n\tif (contentType === 'application/json') {\n\t\tbody = JSON.stringify(data);\n\t} else {\n\t\tbody = data;\n\t}\n\n\tconst axiosInstanceParams: AxiosRequestConfig = {\n\t\tmethod: method,\n\t\tbaseURL: API_BASE_URL,\n\t\turl: url,\n\t\tcancelToken: config.cancelToken,\n\t\theaders: headers,\n\t\tdata: body\n\t};\n\n\treturn new Promise((resolve, reject) => {\n\t\taxiosInstance(axiosInstanceParams)\n\t\t\t.then((response: AxiosResponse<IResponseObject<any>>) => {\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t});\n};\n\nexport { axiosInstance };\n\nconst HttpService = {\n\tget: get,\n\tpost: post,\n\tput: put,\n\tdeleteRequest: deleteRequest,\n\tpatch: patch\n};\n\nexport default HttpService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}